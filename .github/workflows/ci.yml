name: CI/CD Workflow for Event Management App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs: 
  # Job 1: Backend - Test Spring Boot Application
  #backend-test:
   # runs-on: ubuntu-latest

   # services:
    #  postgres:
     #   image: postgres:13
      #  env:
       #   POSTGRES_USER: postgres
        #  POSTGRES_PASSWORD: root
         # POSTGRES_DB: event_manager_db
       # ports:
       #   - 5432:5432
       # options: --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5 

   # steps:
    #  - name: Checkout code
     #   uses: actions/checkout@v2

     # - name: Set up JDK 21
      #  uses: actions/setup-java@v2
       # with:
        #  java-version: '21'
        #  distribution: 'zulu'

     # - name: Run backend tests
      #  run: mvn test -f Back/pom.xml

  # Job 2: Backend - Build Spring Boot Application
  backend-build:
    runs-on: ubuntu-latest
    

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: event_manager_db
        ports:
          - 5432:5432
        options: --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Build with Maven (Debug Mode)
        run: mvn install -X -f Back/pom.xml

  # Job 3: Frontend - Build and Test Angular Application
  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js 20.19.0
        uses: actions/setup-node@v2
        with:
          node-version: '20.19.0'

      - name: Install Angular dependencies
        run: npm install --prefix Front

      - name: Build Angular production
        run: npm run build --prefix Front --prod




  # Job 1: Backend - Test Spring Boot Application
 
  # Job 4: Dockerize and Build the Services
  dockerize:
    runs-on: ubuntu-latest
    needs: [backend-build, frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Build Docker images
        run: |
          docker-compose -f docker-compose.yml build

      - name: Start services with Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d

      - name: Display the hostname of the frontend container
        run: |
          FRONTEND_CONTAINER=$(docker ps -qf "name=event-frontend")
          HOSTNAME=$(docker exec $FRONTEND_CONTAINER hostname)
          echo "Host: $HOSTNAME"

      - name: Set up Node.js 20.19.0
        uses: actions/setup-node@v2
        with:
          node-version: '20.19.0'

      - name: Install dependencies
        run: |
            cd Front  # Se déplacer dans le répertoire Front
            npm install  # Installez les dépendances nécessaires pour vos tests Selenium
 
      - name: Run Selenium Tests
        run: |
            cd Front  # Se déplacer dans le répertoire Front
            node test.js  # Exécuter le script de test.js
    


# Job 5: Selenium - Run Selenium Tests
  
  selenium-test:
    runs-on: ubuntu-latest
    needs: dockerize  # Ensure the Docker services are running before running Selenium tests

    services:
      selenium:
        image: selenium/standalone-chrome
        ports:
          - 4444:4444  # Expose Selenium port
        options: --health-cmd "curl --silent --fail http://localhost:4444/wd/hub/status" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js 20.19.0
        uses: actions/setup-node@v2
        with:
          node-version: '20.19.0'

      - name: Install dependencies
        run: |
          cd Front  # Se déplacer dans le répertoire Front
          npm install  # Installez les dépendances nécessaires pour vos tests Selenium

              
      - name: Run Selenium Tests
        run: |
          cd Front  # Se déplacer dans le répertoire Front
          node test.js  # Exécuter le script de test.js
  

            